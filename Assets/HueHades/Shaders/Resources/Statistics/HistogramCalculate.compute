#pragma kernel CSMain

Texture2D<float4> Input;
RWBuffer<int> Result;

uint2 SourceDimensions;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float4 inputColor = Input[id.xy];
    int4 colorIndex = round(saturate(inputColor) * 255);
    int toWrite = all(id.xy < SourceDimensions) ? 1 : 0;
    InterlockedAdd(Result[colorIndex.r], toWrite);
    InterlockedAdd(Result[colorIndex.g + 256], toWrite);
    InterlockedAdd(Result[colorIndex.b + 512], toWrite);
    InterlockedAdd(Result[colorIndex.a + 768], toWrite);
}
